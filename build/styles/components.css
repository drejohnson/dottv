/**
*
* Main Stylesheet For Visual Style Guide
*
**/
/**
*
* Utils
*
**/
/*==========  VARIABLES  ==========*/
/*==========  FUNCTIONS  ==========*/
/*==========  MIXINS  ==========*/
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0; }

/**
*
* Global
*
**/
*, *::before, *::after {
  box-sizing: border-box; }

html, body, button {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased; }

body {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.625em;
  /* 26px */
  font-weight: 300;
  color: #404040;
  position: relative; }
  body::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    z-index: 9;
    display: none;
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.15) 95%, rgba(0, 0, 0, 0.15) 100%);
    background-size: 100% 26px; }
  body.debug::after {
    display: block;
    pointer-events: none; }

pre {
  background: #f0f0f0;
  padding: 13px; }

/**
*
* Link
*
**/
a {
  color: #3372df; }

a:hover {
  text-decoration: none; }

[navigation] {
  background-color: #1c1c1c; }

core-toolbar {
  background: #1c1c1c;
  color: black;
  height: 100px; }
  core-toolbar::shadow .toolbar-tools {
    height: 100px;
    padding: 0;
    margin: 0; }

.branding > .logo {
  width: 100%;
  height: 100%;
  margin: 0; }
  .branding > .logo [logo] {
    width: 100%;
    height: 100%; }

core-menu {
  margin: 0; }
  core-menu core-item {
    height: 100px;
    border-bottom: 1px solid #313539; }
    core-menu core-item::shadow #label {
      width: 100%;
      font-weight: 400;
      text-align: center;
      color: white;
      transition: font-weight 0.5s ease; }
    core-menu core-item.movies.active, core-menu core-item.movies:hover {
      background-color: rgba(66, 176, 120, 0.7); }
    core-menu core-item.music.active, core-menu core-item.music:hover {
      background-color: rgba(243, 89, 88, 0.7); }
    core-menu core-item.docu-series.active, core-menu core-item.docu-series:hover {
      background-color: rgba(0, 144, 217, 0.7); }
    core-menu core-item.comedy.active, core-menu core-item.comedy:hover {
      background-color: rgba(241, 196, 15, 0.7); }
    core-menu core-item.radio-tv.active, core-menu core-item.radio-tv:hover {
      background-color: rgba(115, 96, 134, 0.7); }
    core-menu core-item.active, core-menu core-item:hover {
      transition: background-color 0.5s ease; }
      core-menu core-item.active::shadow #label, core-menu core-item:hover::shadow #label {
        font-weight: 700; }
    core-menu core-item a {
      margin: 0; }

core-scaffold::shadow core-header-panel > core-toolbar {
  background: #1c1c1c; }

[brand-name] {
  color: #ecf0f1;
  font-family: 'Lato', sans-serif;
  font-size: 18px;
  font-weight: 300;
  padding-top: 0;
  padding-bottom: 0; }
  @media only screen and (min-width: 620px) {
    [brand-name] {
      font-size: 26px; } }
  [brand-name] span {
    color: #c0392b;
    font-family: 'Roboto Condensed', sans-serif;
    font-weight: bold; }

/**
*
* Media - imgs/videos
*
**/
img {
  max-width: 100%; }

/**
*
* Helper
*
**/
.clear::before, .clear::after {
  content: '';
  display: table; }
.clear::after {
  clear: both; }

/*==========  COLORS  ==========*/
.color--blue {
  color: #3372df; }

.color--red {
  color: #cb4437; }

.color--green {
  color: #0f9d58; }

.color--yellow {
  color: #f4b400; }

.color--blue-secondary {
  color: #b7cdf4; }

.color--red-secondary {
  color: #ebb6b0; }

.color--green-secondary {
  color: #56efa5; }

.color--yellow-secondary {
  color: #ffd45b; }

.color--gray-background {
  color: #f0f0f0; }

.color--gray-keyline {
  color: #e0e0e0; }

.color--gray {
  color: #737373; }

.color--gray-dark {
  color: #404040; }

.color--text {
  color: #404040; }

.color--highlight {
  color: #3372df; }

.color--warning {
  color: #ffd45b; }

.color--danger {
  color: #cb4437; }

.color--muted {
  color: #737373; }

.color--remember {
  color: #09829a; }

.color--learning {
  color: #da2e75; }

.color--layouts {
  color: #297ea9; }

.color--user {
  color: #2c8566; }

.color--media {
  color: #cf423a; }

.color--performance {
  color: #7b5294; }

.color--layouts-secondary {
  color: #89c4e2; }

.color--user-secondary {
  color: #78d2b3; }

.color--media-secondary {
  color: #edb8b5; }

.color--performance-secondary {
  color: #c4add2; }

/*==========  TEXT DIVIDER  ==========*/
.text-divider {
  position: relative;
  margin-bottom: 26px; }
  .text-divider::after {
    content: '';
    display: block;
    position: absolute;
    width: 40%;
    height: 1px;
    box-shadow: 0 1px 0 0 #e0e0e0;
    left: 30%;
    bottom: -13px; }
  .text-divider.xlarge {
    margin-bottom: 52px; }
    .text-divider.xlarge::after {
      bottom: -26px; }
  .text-divider.xxlarge {
    margin-bottom: 78px; }
    .text-divider.xxlarge::after {
      bottom: -39px; }
  .text-divider.huge {
    margin-bottom: 78px; }
    .text-divider.huge::after {
      bottom: -39px; }

/*==========  GENERIC  ==========*/
.centered {
  text-align: center; }

/*==========  TAG  ==========*/
.tag {
  font-size: 13px;
  line-height: 2em;
  /* 26px */
  padding-top: 2em;
  padding-bottom: 0;
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  text-decoration: none; }
  .tag:hover {
    color: #404040; }
  .tag::before {
    content: '# ';
    display: inline-block; }


/*# sourceMappingURL=data:application/json;base64, */